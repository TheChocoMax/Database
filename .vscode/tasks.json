{
    "version": "2.0.0",
    "tasks": [
        {
            "label": "Start Database",
            "type": "shell",
            "command": "[ -S /run/postgresql/.s.PGSQL.5432 ] || pg_ctl -D $PGDATA -o '-k /run/postgresql' -l /tmp/pg.log start",
            "problemMatcher": [],
            "isBackground": false,
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": false,
                "panel": "shared"
            }
        },
        {
            "label": "Flatten SQL Files",
            "type": "shell",
            "command": "./scripts/flatten-sql.sh",
            "dependsOn": [
                "Start Database"
            ],
            "options": {
                "cwd": "${workspaceFolder}"
            },
            "problemMatcher": []
        },
        {
            "label": "Rebuild Database",
            "type": "shell",
            "command": "./scripts/rebuild-db.sh",
            "args": [
                "${input:db_username}",
                "${input:db_name}"
            ],
            "dependsOn": [
                "Flatten SQL Files"
            ],
            "options": {
                "cwd": "${workspaceFolder}"
            },
            "problemMatcher": [],
            "group": {
                "kind": "build",
                "isDefault": false
            }
        },
        {
            "label": "Stop Database",
            "type": "shell",
            "command": "pg_ctl -D $PGDATA stop || true",
            "problemMatcher": []
        },
        {
            "label": "Connect to Database",
            "type": "shell",
            "command": "psql -h /run/postgresql -U ${input:db_username} -d ${input:db_name}",
            "problemMatcher": [],
            "presentation": {
                "close": true
            }
        },
        {
            "label": "Delete old Git branches",
            "type": "shell",
            "command": "git fetch --prune && git fetch -p ; git branch -r | awk '{print $1}' | egrep -v -f /dev/fd/0 <(git branch -vv | grep origin) | awk '{print $1}' | xargs git branch -D",
            "problemMatcher": [],
            "presentation": {
                "showReuseMessage": false
            }
        },
        {
            "label": "Full Database Rebuild",
            "dependsOn": [
                "Start Database",
                "Flatten SQL Files",
                "Rebuild Database"
            ],
            "dependsOrder": "sequence",
            "problemMatcher": [],
            "group": {
                "kind": "build",
                "isDefault": true
            }
        }
    ],
    "inputs": [
        {
            "id": "db_username",
            "type": "promptString",
            "description": "Enter the database username",
            "default": "vscode"
        },
        {
            "id": "db_name",
            "type": "promptString",
            "description": "Enter the database name",
            "default": "chocomax"
        }
    ]
}
