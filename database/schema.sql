-- Enums & Types

CREATE TYPE delivery_type AS ENUM ('pickup', 'delivery');
CREATE TYPE product_type AS ENUM ('standard', 'configurable', 'variant_based');

CREATE DOMAIN hex_color AS TEXT CHECK (value ~ '^#[0-9A-Fa-f]{6}$');

CREATE TYPE pagination_info AS (
    current_page INTEGER,
    page_size INTEGER,          -- Default is 12 for listings, 24 for search, 36 for admin
    total_items BIGINT,
    total_pages INTEGER,
    has_next BOOLEAN,
    has_previous BOOLEAN
);

CREATE TYPE pagination_info AS (
    current_page INTEGER,
    page_size INTEGER,          -- Default is 12 for listings, 24 for search, 36 for admin
    total_items BIGINT,
    total_pages INTEGER,
    has_next BOOLEAN,
    has_previous BOOLEAN
);

-- Languages (i18n) - followed by translation tables later in the schema

CREATE TABLE languages (
    language_id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    iso_code CHAR(2) UNIQUE,
    english_name TEXT UNIQUE CHECK (english_name ~ '^[A-Za-z ]+$'),
    native_name TEXT UNIQUE
);

-- Categories for main product grouping (cakes, pastries, bread, chocolate)
CREATE TABLE product_categories (
    category_id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    category_name TEXT NOT NULL UNIQUE,
    category_color HEX_COLOR DEFAULT '#1e90ff',
    category_description TEXT,
    display_order INTEGER DEFAULT 0,
    is_enabled BOOLEAN DEFAULT TRUE,
    created_at TIMESTAMPTZ DEFAULT current_timestamp,
    updated_at TIMESTAMPTZ CHECK (updated_at <= current_timestamp)
);

-- Product & Interaction Tables

CREATE TABLE products (
    product_id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    category_id INTEGER REFERENCES product_categories (category_id) ON DELETE SET NULL,
    product_name TEXT NOT NULL,
    product_description TEXT,
    product_type PRODUCT_TYPE DEFAULT 'standard',
    price NUMERIC(10, 2) CHECK (price >= 0),
    base_price NUMERIC(10, 2) CHECK (base_price >= 0),
    image_url TEXT,
    preparation_time_hours INTEGER DEFAULT 48 CHECK (preparation_time_hours >= 0),
    min_order_hours INTEGER DEFAULT 48 CHECK (min_order_hours >= 0),
    serving_info TEXT, -- e.g., "4-6 persons", "per piece"
    is_customizable BOOLEAN DEFAULT FALSE,
    is_enabled BOOLEAN DEFAULT TRUE,
    created_at TIMESTAMPTZ DEFAULT current_timestamp,
    updated_at TIMESTAMPTZ CHECK (updated_at <= current_timestamp)
);

-- Ensure either price OR base_price is set for all products
CREATE UNIQUE INDEX idx_products_price_base_price ON products (product_id) WHERE (product_type = 'configurable' AND base_price IS NOT NULL) OR (product_type != 'configurable' AND price IS NOT NULL);

CREATE TABLE product_variants (
    product_variant_id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    product_id INTEGER NOT NULL REFERENCES products (product_id) ON DELETE CASCADE,
    variant_name TEXT, -- e.g., "6 pieces", "Small (4 persons)"
    size TEXT,
    quantity INTEGER CHECK (quantity > 0), -- For quantity-based variants
    serving_size TEXT, -- e.g., "4-6 persons"
    is_test BOOLEAN DEFAULT FALSE,
    price_override NUMERIC(10, 2) CHECK (price_override >= 0),
    is_default BOOLEAN DEFAULT FALSE,
    display_order INTEGER DEFAULT 0,
    created_at TIMESTAMPTZ DEFAULT current_timestamp,
    updated_at TIMESTAMPTZ CHECK (updated_at <= current_timestamp)
);

-- Ensure only one default variant per product
CREATE UNIQUE INDEX idx_product_variants_default ON product_variants (product_id) WHERE is_default = TRUE;

CREATE TABLE product_images (
    product_image_id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    product_id INTEGER NOT NULL REFERENCES products (product_id) ON DELETE CASCADE,
    variant_id INTEGER REFERENCES product_variants (product_variant_id) ON DELETE SET NULL,
    image_url TEXT NOT NULL,
    is_primary BOOLEAN DEFAULT FALSE,
    created_at TIMESTAMPTZ DEFAULT current_timestamp,
    updated_at TIMESTAMPTZ CHECK (updated_at <= current_timestamp)
);

-- Attributes for structured things like allergens, dietary suitability, flavors, portion size
CREATE TABLE product_attributes (
    product_attribute_id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    product_id INTEGER NOT NULL REFERENCES products (product_id) ON DELETE CASCADE,
    attribute_name TEXT NOT NULL, -- e.g., "allergen", "flavor", "dietary"
    attribute_value TEXT NOT NULL, -- e.g., "gluten", "chocolate", "vegan"
    attribute_color HEX_COLOR DEFAULT '#32cd32',
    created_at TIMESTAMPTZ DEFAULT current_timestamp,
    updated_at TIMESTAMPTZ CHECK (updated_at <= current_timestamp),
    UNIQUE (product_id, attribute_name, attribute_value)
);

-- Tags for more free-form marketing/organizational stuff like "seasonal", "Valentine's Day", "bestseller"
CREATE TABLE product_tags (
    product_tag_id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    tag_name TEXT NOT NULL UNIQUE CHECK (tag_name ~ '^[a-zA-Z0-9_\s''-]+$'),
    tag_color HEX_COLOR DEFAULT '#ff8c00',
    tag_description TEXT,
    display_order INTEGER DEFAULT 0,
    is_enabled BOOLEAN DEFAULT TRUE,
    created_at TIMESTAMPTZ DEFAULT current_timestamp,
    updated_at TIMESTAMPTZ CHECK (updated_at <= current_timestamp)
);

-- Junction table for product-tag relationships
CREATE TABLE product_tag_assignments (
    product_id INTEGER NOT NULL REFERENCES products (product_id) ON DELETE CASCADE,
    product_tag_id INTEGER NOT NULL REFERENCES product_tags (product_tag_id) ON DELETE CASCADE,
    created_at TIMESTAMPTZ DEFAULT current_timestamp,
    PRIMARY KEY (product_id, product_tag_id)
);

-- Customization system for configurable products
CREATE TABLE customization_options (
    customization_option_id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    option_name TEXT NOT NULL, -- e.g., "Cream Type", "Decoration"
    option_type TEXT NOT NULL CHECK (option_type IN ('single_select', 'multi_select', 'text_input', 'number_input')),
    is_required BOOLEAN DEFAULT FALSE,
    display_order INTEGER DEFAULT 0,
    is_enabled BOOLEAN DEFAULT TRUE,
    created_at TIMESTAMPTZ DEFAULT current_timestamp,
    updated_at TIMESTAMPTZ CHECK (updated_at <= current_timestamp)
);

CREATE TABLE customization_option_values (
    option_value_id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    customization_option_id INTEGER NOT NULL REFERENCES customization_options (customization_option_id) ON DELETE CASCADE,
    value_name TEXT NOT NULL, -- e.g., "Chocolate Cream", "Vanilla Cream"
    price_modifier NUMERIC(10, 2) DEFAULT 0 CHECK (price_modifier >= -999999.99), -- Can be negative for discounts
    is_default BOOLEAN DEFAULT FALSE,
    display_order INTEGER DEFAULT 0,
    is_enabled BOOLEAN DEFAULT TRUE,
    created_at TIMESTAMPTZ DEFAULT current_timestamp,
    updated_at TIMESTAMPTZ CHECK (updated_at <= current_timestamp)
);

-- Junction table linking products to customization options
CREATE TABLE product_customization_options (
    product_id INTEGER NOT NULL REFERENCES products (product_id) ON DELETE CASCADE,
    customization_option_id INTEGER NOT NULL REFERENCES customization_options (customization_option_id) ON DELETE CASCADE,
    is_required BOOLEAN DEFAULT FALSE,
    display_order INTEGER DEFAULT 0,
    created_at TIMESTAMPTZ DEFAULT current_timestamp,
    PRIMARY KEY (product_id, customization_option_id)
);

-- Internationalization (i18n)

CREATE TABLE translations (
    translation_id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    translation_key TEXT NOT NULL UNIQUE CHECK (translation_key ~ '^[a-z0-9_.]+$'), -- Key must be lowercase alphanumeric with underscores and dots
    language_id INTEGER NOT NULL REFERENCES languages (language_id) ON DELETE CASCADE,
    translation_value TEXT NOT NULL,
    created_at TIMESTAMPTZ DEFAULT current_timestamp,
    updated_at TIMESTAMPTZ CHECK (updated_at <= current_timestamp),
    UNIQUE (translation_key, language_id)
);

CREATE TABLE product_translations (
    product_translation_id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    product_id INTEGER NOT NULL REFERENCES products (product_id) ON DELETE CASCADE,
    language_id INTEGER NOT NULL REFERENCES languages (language_id) ON DELETE CASCADE,
    product_name TEXT NOT NULL,
    product_description TEXT,
    created_at TIMESTAMPTZ DEFAULT current_timestamp,
    updated_at TIMESTAMPTZ CHECK (updated_at <= current_timestamp),
    UNIQUE (product_id, language_id)
);

CREATE TABLE category_translations (
    category_translation_id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    category_id INTEGER NOT NULL REFERENCES product_categories (category_id) ON DELETE CASCADE,
    language_id INTEGER NOT NULL REFERENCES languages (language_id) ON DELETE CASCADE,
    category_name TEXT NOT NULL,
    category_description TEXT,
    created_at TIMESTAMPTZ DEFAULT current_timestamp,
    updated_at TIMESTAMPTZ CHECK (updated_at <= current_timestamp),
    UNIQUE (category_id, language_id)
);

CREATE TABLE product_tag_translations (
    tag_translation_id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    product_tag_id INTEGER NOT NULL REFERENCES product_tags (product_tag_id) ON DELETE CASCADE,
    language_id INTEGER NOT NULL REFERENCES languages (language_id) ON DELETE CASCADE,
    tag_name TEXT NOT NULL,
    tag_description TEXT,
    created_at TIMESTAMPTZ DEFAULT current_timestamp,
    updated_at TIMESTAMPTZ CHECK (updated_at <= current_timestamp),
    UNIQUE (product_tag_id, language_id)
);

CREATE TABLE customization_option_translations (
    option_translation_id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    customization_option_id INTEGER NOT NULL REFERENCES customization_options (customization_option_id) ON DELETE CASCADE,
    language_id INTEGER NOT NULL REFERENCES languages (language_id) ON DELETE CASCADE,
    option_name TEXT NOT NULL,
    created_at TIMESTAMPTZ DEFAULT current_timestamp,
    updated_at TIMESTAMPTZ CHECK (updated_at <= current_timestamp),
    UNIQUE (customization_option_id, language_id)
);

CREATE TABLE customization_option_value_translations (
    value_translation_id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    option_value_id INTEGER NOT NULL REFERENCES customization_option_values (option_value_id) ON DELETE CASCADE,
    language_id INTEGER NOT NULL REFERENCES languages (language_id) ON DELETE CASCADE,
    value_name TEXT NOT NULL,
    created_at TIMESTAMPTZ DEFAULT current_timestamp,
    updated_at TIMESTAMPTZ CHECK (updated_at <= current_timestamp),
    UNIQUE (option_value_id, language_id)
);

-- Support & Feedback

CREATE TABLE contact_messages (
    contact_message_id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    contact_name TEXT NOT NULL,
    contact_email TEXT NOT NULL,
    content TEXT NOT NULL,
    created_at TIMESTAMPTZ DEFAULT current_timestamp,
    updated_at TIMESTAMPTZ CHECK (updated_at <= current_timestamp)
);

-- =============================================================================
-- INDEXES FOR PERFORMANCE
-- =============================================================================

-- Categories indexes
CREATE INDEX idx_product_categories_enabled ON product_categories (is_enabled, display_order) WHERE is_enabled = TRUE;
CREATE INDEX idx_product_categories_name ON product_categories (category_name);

-- Products table indexes
CREATE INDEX idx_products_enabled ON products (is_enabled) WHERE is_enabled = TRUE;
CREATE INDEX idx_products_category ON products (category_id);
CREATE INDEX idx_products_type ON products (product_type);
CREATE INDEX idx_products_price ON products (price);
CREATE INDEX idx_products_created_at ON products (created_at DESC);
CREATE INDEX idx_products_updated_at ON products (updated_at DESC);
CREATE INDEX idx_products_enabled_price ON products (is_enabled, price) WHERE is_enabled = TRUE;
CREATE INDEX idx_products_customizable ON products (is_customizable) WHERE is_customizable = TRUE;
CREATE INDEX idx_products_preparation_time ON products (preparation_time_hours);
CREATE INDEX idx_products_enabled_type ON products (is_enabled, product_type) WHERE is_enabled = TRUE;

-- Product variants indexes
CREATE INDEX idx_product_variants_product_id ON product_variants (product_id);
CREATE INDEX idx_product_variants_non_test ON product_variants (product_id) WHERE is_test = FALSE;
CREATE INDEX idx_product_variants_size ON product_variants (size);
CREATE INDEX idx_product_variants_display_order ON product_variants (product_id, display_order);
CREATE INDEX idx_product_variants_quantity ON product_variants (quantity);

-- Product images indexes
CREATE INDEX idx_product_images_product_id ON product_images (product_id);
CREATE INDEX idx_product_images_variant_id ON product_images (variant_id) WHERE variant_id IS NOT NULL;
CREATE INDEX idx_product_images_primary ON product_images (product_id, is_primary) WHERE is_primary = TRUE;

-- Product attributes indexes
CREATE INDEX idx_product_attributes_product_id ON product_attributes (product_id);
CREATE INDEX idx_product_attributes_name ON product_attributes (attribute_name);
CREATE INDEX idx_product_attributes_value ON product_attributes (attribute_value);
CREATE INDEX idx_product_attributes_name_value ON product_attributes (attribute_name, attribute_value);

-- Product tags indexes
CREATE INDEX idx_product_tags_enabled ON product_tags (is_enabled, display_order) WHERE is_enabled = TRUE;
CREATE INDEX idx_product_tags_color ON product_tags (tag_color);

-- Junction table indexes
CREATE INDEX idx_product_tag_assignments_tag ON product_tag_assignments (product_tag_id);

-- Customization indexes
CREATE INDEX idx_customization_options_enabled ON customization_options (is_enabled, display_order) WHERE is_enabled = TRUE;
CREATE INDEX idx_customization_option_values_option ON customization_option_values (customization_option_id, display_order);
CREATE INDEX idx_customization_option_values_enabled ON customization_option_values (is_enabled) WHERE is_enabled = TRUE;
CREATE INDEX idx_product_customization_options_product ON product_customization_options (product_id, display_order);

-- Internationalization indexes
CREATE INDEX idx_translations_key_lang ON translations (translation_key, language_id);
CREATE INDEX idx_translations_language ON translations (language_id);

CREATE INDEX idx_product_translations_product_lang ON product_translations (product_id, language_id);
CREATE INDEX idx_product_translations_language ON product_translations (language_id);

CREATE INDEX idx_category_translations_category_lang ON category_translations (category_id, language_id);
CREATE INDEX idx_category_translations_language ON category_translations (language_id);

CREATE INDEX idx_product_tag_translations_tag_lang ON product_tag_translations (product_tag_id, language_id);

CREATE INDEX idx_customization_option_translations_option_lang ON customization_option_translations (customization_option_id, language_id);
CREATE INDEX idx_customization_option_value_translations_value_lang ON customization_option_value_translations (option_value_id, language_id);

-- Languages index for i18n lookups
CREATE INDEX idx_languages_iso_code ON languages (iso_code);

-- Full-text search indexes
CREATE INDEX idx_products_search ON products USING gin (to_tsvector('english', product_name || ' ' || coalesce(product_description, '')));
CREATE INDEX idx_product_translations_search ON product_translations USING gin (to_tsvector('english', product_name || ' ' || coalesce(product_description, '')));

-- Composite indexes for common query patterns
CREATE INDEX idx_products_enabled_created ON products (is_enabled, created_at DESC) WHERE is_enabled = TRUE;
CREATE INDEX idx_products_enabled_price_created ON products (is_enabled, price, created_at DESC) WHERE is_enabled = TRUE;
CREATE INDEX idx_products_category_enabled ON products (category_id, is_enabled) WHERE is_enabled = TRUE;
