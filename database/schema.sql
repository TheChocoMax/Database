CREATE EXTENSION IF NOT EXISTS "uuid-ossp";

-- Enums & Types

CREATE TYPE delivery_type AS ENUM ('pickup', 'delivery');

CREATE TYPE order_status AS ENUM (
    'cancelled',        -- Order cancelled by user or system
    'pending',          -- Order placed, not yet processed
    'preparing',        -- Order being prepared
    'ready',            -- Order ready for pickup or delivery
    'sent',             -- Order sent to delivery partner
    'out_for_delivery', -- Order out for delivery
    'completed'         -- Order completed and delivered
);

CREATE TYPE payment_status AS ENUM (
    'unpaid',           -- Order placed, not yet paid
    'paid',             -- Fully paid
    'refunded',         -- Full refund issued
    'partial_refund',   -- Partial refund
    'cancelled'         -- Payment cancelled or failed
);

CREATE TYPE authentication_method AS ENUM ('TOTP', 'WebAuthn', 'Email');

CREATE TYPE moderation_action_type AS ENUM ('approve', 'reject', 'delete');
CREATE TYPE moderation_target_type AS ENUM ('user', 'product', 'comment');

CREATE TYPE discount_type AS ENUM ('percentage', 'fixed');
CREATE TYPE promotion_type AS ENUM ('buy_x_get_y', 'bulk_discount');

CREATE TYPE admin_account_role AS ENUM ('admin', 'owner', 'moderator');
CREATE TYPE admin_action_target_type AS ENUM ('user', 'product', 'comment', 'order');

-- Languages (i18n) - followed by translation tables later in the schema

CREATE TABLE languages (
    language_id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    iso_code CHAR(2) UNIQUE,
    english_name TEXT UNIQUE CHECK (english_name ~ '^[A-Za-z ]+$'),
    native_name TEXT UNIQUE
);

-- User & Security Tables

CREATE TABLE users (
    user_id UUID PRIMARY KEY DEFAULT uuid_generate_v4(),
    username TEXT NOT NULL CHECK (username ~ '^[a-zA-Z0-9_]+$'), -- username must be alphanumeric and can include underscores
    discriminator SMALLINT NOT NULL CHECK (discriminator >= 0 AND discriminator <= 9999), -- 4-digit tag
    email_encrypted TEXT NOT NULL CHECK (email_encrypted <> ''), -- Encrypted email must not be empty
    email_hash TEXT UNIQUE NOT NULL CHECK (email_hash ~ '^[a-f0-9]{64}$'), -- SHA-256 hash of email
    password_hash TEXT NOT NULL CHECK (password_hash ~ '^\$argon2id\$v=\d+\$m=\d+,t=\d+,p=\d+\$[a-zA-Z0-9+\/=]+\$[a-zA-Z0-9+\/=]+$'), -- Argon2id hash format
    phone_encrypted TEXT CHECK (phone_encrypted IS NULL OR phone_encrypted <> ''), -- Encrypted phone can be NULL or cannot be empty
    phone_hash TEXT UNIQUE CHECK (phone_hash ~ '^[a-f0-9]{64}$'), -- SHA-256 hash of phone
    language_id INTEGER REFERENCES languages (language_id) ON DELETE SET NULL,
    display_role TEXT, -- For badges/icons like "owner", "verified seller", etc.
    created_at TIMESTAMPTZ DEFAULT current_timestamp,
    updated_at TIMESTAMPTZ DEFAULT current_timestamp,
    last_login_at TIMESTAMPTZ CHECK (last_login_at <= current_timestamp),
    deleted_at TIMESTAMPTZ CHECK (deleted_at <= current_timestamp),
    UNIQUE (username, discriminator)
);

CREATE TABLE pending_users (
    pending_user_id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    email_encrypted TEXT NOT NULL CHECK (email_encrypted <> ''), -- Encrypted email must not be empty
    email_hash TEXT NOT NULL CHECK (email_hash ~ '^[a-f0-9]{64}$'), -- SHA-256 hash of email
    verification_token TEXT NOT NULL UNIQUE CHECK (verification_token ~ '^[A-Za-z0-9_-]{43,64}$'), -- Base64 URL-safe token
    created_at TIMESTAMPTZ DEFAULT current_timestamp
);

CREATE TABLE user_permissions (
    user_permission_id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    user_id UUID NOT NULL REFERENCES users (user_id) ON DELETE CASCADE,
    permission TEXT NOT NULL,
    granted BOOLEAN DEFAULT TRUE,
    created_at TIMESTAMPTZ DEFAULT current_timestamp,
    updated_at TIMESTAMPTZ DEFAULT current_timestamp
);

CREATE TABLE user_sessions (
    user_session_id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    user_id UUID NOT NULL REFERENCES users (user_id) ON DELETE CASCADE,
    token TEXT NOT NULL UNIQUE,
    device_info TEXT,
    ip_address INET,
    expires_at TIMESTAMPTZ NOT NULL,
    created_at TIMESTAMPTZ DEFAULT current_timestamp,
    updated_at TIMESTAMPTZ DEFAULT current_timestamp
);

CREATE TABLE email_verifications (
    email_verification_id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    user_id UUID NOT NULL REFERENCES users (user_id) ON DELETE CASCADE,
    token TEXT NOT NULL UNIQUE,
    is_verified BOOLEAN DEFAULT FALSE,
    created_at TIMESTAMPTZ DEFAULT current_timestamp,
    updated_at TIMESTAMPTZ DEFAULT current_timestamp
);

CREATE TABLE password_resets (
    password_reset_id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    user_id UUID NOT NULL REFERENCES users (user_id) ON DELETE CASCADE,
    token TEXT NOT NULL UNIQUE,
    expires_at TIMESTAMPTZ NOT NULL,
    created_at TIMESTAMPTZ DEFAULT current_timestamp,
    updated_at TIMESTAMPTZ DEFAULT current_timestamp
);

CREATE TABLE user_authentication_methods (
    user_authentication_method_id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    user_id UUID NOT NULL REFERENCES users (user_id) ON DELETE CASCADE,
    user_authentication_method_secret TEXT NOT NULL, -- Base32 encoded secret for TOTP
    is_enabled BOOLEAN DEFAULT FALSE,
    authentication_method AUTHENTICATION_METHOD NOT NULL,
    created_at TIMESTAMPTZ DEFAULT current_timestamp,
    updated_at TIMESTAMPTZ DEFAULT current_timestamp
);

CREATE TABLE login_attempts (
    login_attempt_id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    user_id UUID REFERENCES users (user_id) ON DELETE SET NULL,
    ip_address INET NOT NULL,
    user_agent TEXT NOT NULL,
    success BOOLEAN NOT NULL,
    created_at TIMESTAMPTZ DEFAULT current_timestamp
);

-- Product & Interaction Tables

CREATE TABLE products (
    product_id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    product_name TEXT NOT NULL,
    product_description TEXT,
    price NUMERIC(10, 2) NOT NULL CHECK (price >= 0),
    image_url TEXT,
    is_enabled BOOLEAN DEFAULT TRUE,
    created_at TIMESTAMPTZ DEFAULT current_timestamp,
    updated_at TIMESTAMPTZ DEFAULT current_timestamp
);

CREATE TABLE product_categories (
    product_category_id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    product_category_name TEXT NOT NULL UNIQUE,
    product_category_description TEXT,
    created_at TIMESTAMPTZ DEFAULT current_timestamp,
    updated_at TIMESTAMPTZ DEFAULT current_timestamp
);

CREATE TABLE product_variants (
    product_variant_id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    product_id INTEGER NOT NULL REFERENCES products (product_id) ON DELETE CASCADE,
    size TEXT,
    is_test BOOLEAN DEFAULT FALSE,
    price_override NUMERIC(10, 2) CHECK (price_override >= 0),
    created_at TIMESTAMPTZ DEFAULT current_timestamp,
    updated_at TIMESTAMPTZ DEFAULT current_timestamp
);

CREATE TABLE product_images (
    product_image_id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    product_id INTEGER NOT NULL REFERENCES products (product_id) ON DELETE CASCADE,
    variant_id INTEGER REFERENCES product_variants (product_variant_id) ON DELETE SET NULL,
    image_url TEXT NOT NULL,
    is_primary BOOLEAN DEFAULT FALSE,
    created_at TIMESTAMPTZ DEFAULT current_timestamp,
    updated_at TIMESTAMPTZ DEFAULT current_timestamp
);

CREATE TABLE product_likes (
    product_like_id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    user_id UUID NOT NULL REFERENCES users (user_id) ON DELETE CASCADE,
    product_id INTEGER NOT NULL REFERENCES products (product_id) ON DELETE CASCADE,
    created_at TIMESTAMPTZ DEFAULT current_timestamp,
    updated_at TIMESTAMPTZ DEFAULT current_timestamp,
    UNIQUE (user_id, product_id)
);

CREATE TABLE product_comments (
    product_comment_id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    user_id UUID NOT NULL REFERENCES users (user_id) ON DELETE CASCADE,
    product_id INTEGER NOT NULL REFERENCES products (product_id) ON DELETE CASCADE,
    content TEXT NOT NULL,
    is_moderated BOOLEAN DEFAULT FALSE,
    created_at TIMESTAMPTZ DEFAULT current_timestamp,
    updated_at TIMESTAMPTZ DEFAULT current_timestamp
);

CREATE TABLE moderation_actions (
    moderation_action_id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    user_id UUID NOT NULL REFERENCES users (user_id) ON DELETE CASCADE,
    action_type MODERATION_ACTION_TYPE NOT NULL,
    target_id INTEGER NOT NULL, -- Could be user_id, product_id, comment_id, etc.
    target_type MODERATION_TARGET_TYPE NOT NULL,
    reason TEXT,
    created_at TIMESTAMPTZ DEFAULT current_timestamp,
    updated_at TIMESTAMPTZ DEFAULT current_timestamp
);

-- Cart & Order Tables

CREATE TABLE carts (
    cart_id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    user_id UUID REFERENCES users (user_id) ON DELETE SET NULL,
    session_token TEXT UNIQUE, -- For anonymous carts
    created_at TIMESTAMPTZ DEFAULT current_timestamp,
    updated_at TIMESTAMPTZ DEFAULT current_timestamp
);

CREATE TABLE cart_items (
    cart_item_id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    cart_id INTEGER NOT NULL REFERENCES carts (cart_id) ON DELETE CASCADE,
    product_variant_id INTEGER NOT NULL REFERENCES product_variants (product_variant_id) ON DELETE CASCADE,
    quantity INTEGER NOT NULL CHECK (quantity > 0),
    created_at TIMESTAMPTZ DEFAULT current_timestamp,
    updated_at TIMESTAMPTZ DEFAULT current_timestamp,
    UNIQUE (cart_id, product_variant_id)
);

CREATE TABLE orders (
    order_id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    user_id UUID REFERENCES users (user_id) ON DELETE SET NULL,
    cart_id INTEGER NOT NULL REFERENCES carts (cart_id) ON DELETE CASCADE,
    delivery_type DELIVERY_TYPE NOT NULL,
    total_price NUMERIC(10, 2) NOT NULL CHECK (total_price >= 0),
    order_status ORDER_STATUS NOT NULL DEFAULT 'pending',
    created_at TIMESTAMPTZ DEFAULT current_timestamp,
    updated_at TIMESTAMPTZ DEFAULT current_timestamp
);

CREATE TABLE order_items (
    order_item_id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    order_id INTEGER NOT NULL REFERENCES orders (order_id) ON DELETE CASCADE,
    product_variant_id INTEGER NOT NULL REFERENCES product_variants (product_variant_id) ON DELETE CASCADE,
    quantity INTEGER NOT NULL CHECK (quantity > 0),
    price NUMERIC(10, 2) NOT NULL CHECK (price >= 0),
    created_at TIMESTAMPTZ DEFAULT current_timestamp,
    updated_at TIMESTAMPTZ DEFAULT current_timestamp,
    UNIQUE (order_id, product_variant_id)
);

CREATE TABLE order_status_histories (
    order_status_history_id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    order_id INTEGER NOT NULL REFERENCES orders (order_id) ON DELETE CASCADE,
    order_status_history ORDER_STATUS NOT NULL,
    changed_at TIMESTAMPTZ DEFAULT current_timestamp,
    created_at TIMESTAMPTZ DEFAULT current_timestamp,
    updated_at TIMESTAMPTZ DEFAULT current_timestamp
);

CREATE TABLE order_delivery_infos (
    order_delivery_info_id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    order_id INTEGER NOT NULL REFERENCES orders (order_id) ON DELETE CASCADE,
    delivery_address TEXT NOT NULL,
    delivery_partner_id UUID REFERENCES users (user_id) ON DELETE SET NULL, -- Could be a delivery person or store
    delivery_type DELIVERY_TYPE NOT NULL,
    estimated_delivery_time TIMESTAMPTZ,
    created_at TIMESTAMPTZ DEFAULT current_timestamp,
    updated_at TIMESTAMPTZ DEFAULT current_timestamp
);

CREATE TABLE order_timestamps (
    order_timestamp_id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    order_id INTEGER NOT NULL REFERENCES orders (order_id) ON DELETE CASCADE,
    placed_at TIMESTAMPTZ,
    ready_at TIMESTAMPTZ,
    sent_at TIMESTAMPTZ,
    received_at TIMESTAMPTZ,
    created_at TIMESTAMPTZ DEFAULT current_timestamp,
    updated_at TIMESTAMPTZ DEFAULT current_timestamp
);

-- Promotions & Loyalty

CREATE TABLE discount_codes (
    discount_code_id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    code TEXT NOT NULL UNIQUE,
    discount_type DISCOUNT_TYPE NOT NULL,
    discount_value NUMERIC(10, 2) NOT NULL CHECK (discount_value >= 0),
    min_order_value NUMERIC(10, 2) CHECK (min_order_value >= 0),
    max_uses INTEGER CHECK (max_uses > 0),
    expiration_date TIMESTAMPTZ,
    created_at TIMESTAMPTZ DEFAULT current_timestamp,
    updated_at TIMESTAMPTZ DEFAULT current_timestamp
);

CREATE TABLE user_discounts (
    user_discount_id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    user_id UUID NOT NULL REFERENCES users (user_id) ON DELETE CASCADE,
    discount_code_id INTEGER NOT NULL REFERENCES discount_codes (discount_code_id) ON DELETE CASCADE,
    used_at TIMESTAMPTZ DEFAULT current_timestamp,
    created_at TIMESTAMPTZ DEFAULT current_timestamp,
    updated_at TIMESTAMPTZ DEFAULT current_timestamp,
    UNIQUE (user_id, discount_code_id)
);

CREATE TABLE loyalty_programs (
    loyalty_program_id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    product_id INTEGER NOT NULL REFERENCES products (product_id) ON DELETE CASCADE,
    promotion_type PROMOTION_TYPE NOT NULL,
    condition TEXT NOT NULL, -- e.g., "5 of size M"
    reward TEXT NOT NULL, -- e.g., "1 free"
    is_active BOOLEAN DEFAULT TRUE,
    created_at TIMESTAMPTZ DEFAULT current_timestamp,
    updated_at TIMESTAMPTZ DEFAULT current_timestamp
);

CREATE TABLE user_loyalty_progress (
    user_loyalty_progress_id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    user_id UUID NOT NULL REFERENCES users (user_id) ON DELETE CASCADE,
    product_id INTEGER NOT NULL REFERENCES products (product_id) ON DELETE CASCADE,
    quantity INTEGER NOT NULL CHECK (quantity >= 0),
    last_updated TIMESTAMPTZ DEFAULT current_timestamp,
    created_at TIMESTAMPTZ DEFAULT current_timestamp,
    updated_at TIMESTAMPTZ DEFAULT current_timestamp
);

-- Internationalization (i18n)

CREATE TABLE translations (
    translation_id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    translation_key TEXT NOT NULL UNIQUE CHECK (translation_key ~ '^[a-z0-9_.]+$'), -- Key must be lowercase alphanumeric with underscores and dots
    language_id INTEGER NOT NULL REFERENCES languages (language_id) ON DELETE CASCADE,
    translation_value TEXT NOT NULL,
    created_at TIMESTAMPTZ DEFAULT current_timestamp,
    updated_at TIMESTAMPTZ DEFAULT current_timestamp,
    UNIQUE (translation_key, language_id)
);

CREATE TABLE product_translations (
    product_translation_id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    product_id INTEGER NOT NULL REFERENCES products (product_id) ON DELETE CASCADE,
    language_id INTEGER NOT NULL REFERENCES languages (language_id) ON DELETE CASCADE,
    product_name TEXT NOT NULL,
    product_description TEXT,
    created_at TIMESTAMPTZ DEFAULT current_timestamp,
    updated_at TIMESTAMPTZ DEFAULT current_timestamp,
    UNIQUE (product_id, language_id)
);

CREATE TABLE category_translations (
    category_translation_id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    category_id INTEGER NOT NULL REFERENCES product_categories (product_category_id) ON DELETE CASCADE,
    language_id INTEGER NOT NULL REFERENCES languages (language_id) ON DELETE CASCADE,
    category_name TEXT NOT NULL,
    category_description TEXT,
    created_at TIMESTAMPTZ DEFAULT current_timestamp,
    updated_at TIMESTAMPTZ DEFAULT current_timestamp,
    UNIQUE (category_id, language_id)
);

-- Analytics & Admin

CREATE TABLE metrics_events (
    metrics_event_id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    user_id UUID REFERENCES users (user_id) ON DELETE SET NULL,
    event_type TEXT NOT NULL,
    event_data JSONB NOT NULL,
    created_at TIMESTAMPTZ DEFAULT current_timestamp,
    updated_at TIMESTAMPTZ DEFAULT current_timestamp
);

CREATE TABLE admin_accounts (
    admin_account_id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    user_id UUID NOT NULL REFERENCES users (user_id) ON DELETE CASCADE,
    admin_account_role ADMIN_ACCOUNT_ROLE NOT NULL,
    is_active BOOLEAN DEFAULT TRUE,
    target_type ADMIN_ACTION_TARGET_TYPE NOT NULL,
    created_at TIMESTAMPTZ DEFAULT current_timestamp,
    updated_at TIMESTAMPTZ DEFAULT current_timestamp,
    UNIQUE (user_id, admin_account_role)
);

CREATE TABLE admin_actions (
    admin_action_id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    user_id UUID NOT NULL REFERENCES users (user_id) ON DELETE CASCADE,
    action_type TEXT NOT NULL,
    target_id INTEGER NOT NULL, -- Could be user_id, product_id, comment_id, etc.
    target_type TEXT NOT NULL CHECK (target_type IN ('user', 'product', 'comment', 'order')),
    details JSONB,
    created_at TIMESTAMPTZ DEFAULT current_timestamp,
    updated_at TIMESTAMPTZ DEFAULT current_timestamp
);

-- Support & Feedback

CREATE TABLE contact_messages (
    contact_message_id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    contact_name TEXT NOT NULL,
    contact_email TEXT NOT NULL,
    content TEXT NOT NULL,
    created_at TIMESTAMPTZ DEFAULT current_timestamp,
    updated_at TIMESTAMPTZ DEFAULT current_timestamp
);

CREATE TABLE feedbacks (
    feedback_id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    user_id UUID REFERENCES users (user_id) ON DELETE SET NULL,
    product_id INTEGER NOT NULL REFERENCES products (product_id) ON DELETE CASCADE,
    rating INTEGER NOT NULL CHECK (rating >= 1 AND rating <= 5),
    comment TEXT,
    created_at TIMESTAMPTZ DEFAULT current_timestamp,
    updated_at TIMESTAMPTZ DEFAULT current_timestamp
);

CREATE INDEX idx_users_email_hash ON users (email_hash);
CREATE INDEX idx_user_sessions_token ON user_sessions (token);
CREATE INDEX idx_login_attempts_user_id ON login_attempts (user_id);
CREATE INDEX idx_metrics_events_event_type ON metrics_events (event_type);
