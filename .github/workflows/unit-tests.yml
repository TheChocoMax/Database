name: Run PostgreSQL Unit Tests

on:
  push:
    branches: [main]
  pull_request: null
  workflow_dispatch:

env:
  PG_PORT: 5432
  PG_USER: postgres
  PG_PASSWORD: postgres
  PG_DATABASE: chocomax

jobs:
  unit-tests:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout source
        uses: actions/checkout@v4

      - name: Install PostgreSQL and required tools
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            postgresql \
            postgresql-client \
            postgresql-server-dev-all \
            libdbd-pg-perl \
            make gcc \
            libpq-dev \
            cpanminus
          sudo cpanm TAP::Parser::SourceHandler::pgTAP

      - name: Check PostgreSQL version
        run: psql --version

      - name: Start PostgreSQL
        run: |
          sudo systemctl start postgresql
          sudo -u postgres psql -c "CREATE USER $PG_USER WITH SUPERUSER PASSWORD '$PG_PASSWORD';"
          sudo -u postgres createdb -O $PG_USER $PG_DATABASE
        env:
          PGUSER: postgres

      - name: Build and install pgTAP
        run: |
          git clone --depth 1 https://github.com/theory/pgtap
          cd pgtap
          make
          sudo -u postgres psql -d $PG_DATABASE -f sql/pgtap.sql
          cd .. && rm -rf pgtap

      - name: Flatten and load schema SQL files
        run: |
          mkdir flattened-sql
          find database -type f -name "*.sql" ! -name "*.session.sql" ! -name "*.test.sql" | while read -r file; do
            clean_path=$(echo "$file" | sed 's|^\./||')
            new_name=$(echo "$clean_path" | sed 's|/|_|g')
            cp "$file" "flattened-sql/$new_name"
            echo "✅ Copied: $file → flattened-sql/$new_name"
          done

          find flattened-sql -maxdepth 1 -name "*.sql" | while read -r file; do
            echo "➡️ Running $file..."
            psql -U $PG_USER -d $PG_DATABASE -h localhost -p $PG_PORT -f "$file"
          done

      - name: Run pgTAP tests
        run: |
          pg_prove -U $PG_USER -d $PG_DATABASE -h localhost -p $PG_PORT database/tests/*.test.sql
        env:
          PGPASSWORD: ${{ env.PG_PASSWORD }}
