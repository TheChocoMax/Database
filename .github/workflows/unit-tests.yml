---
name: Run Unit Tests

on:
  push:
    branches:
      - main
  pull_request: null
  workflow_dispatch:

env:
  PG_VERSION: 17.5-alpine3.22
  PG_USER: postgres
  PG_PASSWORD: postgres
  PG_DATABASE: chocomax
  PG_HOST: localhost
  PG_PORT: 5432

jobs:
  pgtap:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:${{ env.PG_VERSION }}
        env:
          POSTGRES_PASSWORD: ${{ env.PG_PASSWORD }}
          POSTGRES_DB: ${{ env.PG_DATABASE }}
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - ${{ env.PG_PORT }}:5432

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y postgresql-client libdbd-pg-perl make gcc postgresql-server-dev-all cpanminus
          sudo cpanm TAP::Parser::SourceHandler::pgTAP

      - name: Checkout PgTAP
        uses: actions/checkout@v4
        with:
          repository: theory/pgtap
          path: pgtap
          ref: v1.3.3

      - name: Install PgTAP to database
        working-directory: pgtap
        run: |
          make
          psql -h ${{ env.PG_HOST }} -U ${{ env.PG_USER }} -d ${{ env.PG_DATABASE }} -f sql/pgtap.sql
        env:
          PGPASSWORD: ${{ env.PG_PASSWORD }}

      - name: Load your SQL files
        run: |
          psql -h ${{ env.PG_HOST }} -U ${{ env.PG_USER }} -d ${{ env.PG_DATABASE }} -f my_function.sql
        env:
          PGPASSWORD: ${{ env.PG_PASSWORD }}

      - name: Run tests
        run: |
          pg_prove -h ${{ env.PG_HOST }} -U ${{ env.PG_USER }} -d ${{ env.PG_DATABASE }} database/tests/*.test.sql
        env:
          PGPASSWORD: ${{ env.PG_PASSWORD }}
